import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from 'groundx-typescript-sdk/dist/configuration';
import { RequestArgs, BaseAPI } from 'groundx-typescript-sdk/dist/base';
import { SearchContentIdParameter } from 'groundx-typescript-sdk/dist/models';
import { SearchDocumentsRequest } from 'groundx-typescript-sdk/dist/models';
import { SearchRequest } from 'groundx-typescript-sdk/dist/models';
import { SearchResponse } from 'groundx-typescript-sdk/dist/models';
/**
 * SearchApi - axios parameter creator
 * @export
 */
export declare const SearchApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Search documents on GroundX for the most relevant information to a given query.  The result of this query is typically used in one of two ways; result[\'search\'][\'text\'] can be used to provide context to a language model, facilitating RAG, or result[\'search\'][\'results\'] can be used to observe chunks of text which are relevant to the query, facilitating citation.  Interact with the \"Request Body\" below to explore the arguments of this function. Enter your GroundX API key to send a request directly from this web page. Select your language of choice to structure a code snippet based on your specified arguments.
     * @summary search.content
     * @param {SearchContentIdParameter} id The bucketId, groupId, projectId, or documentId to be searched. The document or documents within the specified container will be compared to the query, and relevant information will be extracted.
     * @param {number} [n] The maximum number of returned search results. Accepts 1-100 with a default of 20.
     * @param {string} [nextToken] A token for pagination. If the number of search results for a given query is larger than n, the response will include a \&quot;nextToken\&quot; value. That token can be included in this field to retrieve the next batch of n search results.
     * @param {number} [verbosity] The amount of data returned with each search result. 0 &#x3D;&#x3D; no search results, only the recommended context. 1 &#x3D;&#x3D; search results but no searchData. 2 &#x3D;&#x3D; search results and searchData.
     * @param {SearchRequest} [searchRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    content: (id: SearchContentIdParameter, n?: number, nextToken?: string, verbosity?: number, searchRequest?: SearchRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Search documents on GroundX for the most relevant information to a given query by documentId(s).  The result of this query is typically used in one of two ways; result[\'search\'][\'text\'] can be used to provide context to a language model, facilitating RAG, or result[\'search\'][\'results\'] can be used to observe chunks of text which are relevant to the query, facilitating citation.  Interact with the \"Request Body\" below to explore the arguments of this function. Enter your GroundX API key to send a request directly from this web page. Select your language of choice to structure a code snippet based on your specified arguments.
     * @summary search.documents
     * @param {number} [n] The maximum number of returned search results. Accepts 1-100 with a default of 20.
     * @param {string} [nextToken] A token for pagination. If the number of search results for a given query is larger than n, the response will include a \&quot;nextToken\&quot; value. That token can be included in this field to retrieve the next batch of n search results.
     * @param {number} [verbosity] The amount of data returned with each search result. 0 &#x3D;&#x3D; no search results, only the recommended context. 1 &#x3D;&#x3D; search results but no searchData. 2 &#x3D;&#x3D; search results and searchData.
     * @param {SearchDocumentsRequest} [searchDocumentsRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    documents: (n?: number, nextToken?: string, verbosity?: number, searchDocumentsRequest?: SearchDocumentsRequest, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * SearchApi - functional programming interface
 * @export
 */
export declare const SearchApiFp: (configuration?: Configuration) => {
    /**
     * Search documents on GroundX for the most relevant information to a given query.  The result of this query is typically used in one of two ways; result[\'search\'][\'text\'] can be used to provide context to a language model, facilitating RAG, or result[\'search\'][\'results\'] can be used to observe chunks of text which are relevant to the query, facilitating citation.  Interact with the \"Request Body\" below to explore the arguments of this function. Enter your GroundX API key to send a request directly from this web page. Select your language of choice to structure a code snippet based on your specified arguments.
     * @summary search.content
     * @param {SearchApiContentRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    content(requestParameters: SearchApiContentRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SearchResponse>>;
    /**
     * Search documents on GroundX for the most relevant information to a given query by documentId(s).  The result of this query is typically used in one of two ways; result[\'search\'][\'text\'] can be used to provide context to a language model, facilitating RAG, or result[\'search\'][\'results\'] can be used to observe chunks of text which are relevant to the query, facilitating citation.  Interact with the \"Request Body\" below to explore the arguments of this function. Enter your GroundX API key to send a request directly from this web page. Select your language of choice to structure a code snippet based on your specified arguments.
     * @summary search.documents
     * @param {SearchApiDocumentsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    documents(requestParameters: SearchApiDocumentsRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SearchResponse>>;
};
/**
 * SearchApi - factory interface
 * @export
 */
export declare const SearchApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Search documents on GroundX for the most relevant information to a given query.  The result of this query is typically used in one of two ways; result[\'search\'][\'text\'] can be used to provide context to a language model, facilitating RAG, or result[\'search\'][\'results\'] can be used to observe chunks of text which are relevant to the query, facilitating citation.  Interact with the \"Request Body\" below to explore the arguments of this function. Enter your GroundX API key to send a request directly from this web page. Select your language of choice to structure a code snippet based on your specified arguments.
     * @summary search.content
     * @param {SearchApiContentRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    content(requestParameters: SearchApiContentRequest, options?: AxiosRequestConfig): AxiosPromise<SearchResponse>;
    /**
     * Search documents on GroundX for the most relevant information to a given query by documentId(s).  The result of this query is typically used in one of two ways; result[\'search\'][\'text\'] can be used to provide context to a language model, facilitating RAG, or result[\'search\'][\'results\'] can be used to observe chunks of text which are relevant to the query, facilitating citation.  Interact with the \"Request Body\" below to explore the arguments of this function. Enter your GroundX API key to send a request directly from this web page. Select your language of choice to structure a code snippet based on your specified arguments.
     * @summary search.documents
     * @param {SearchApiDocumentsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    documents(requestParameters: SearchApiDocumentsRequest, options?: AxiosRequestConfig): AxiosPromise<SearchResponse>;
};
/**
 * Request parameters for content operation in SearchApi.
 * @export
 * @interface SearchApiContentRequest
 */
export type SearchApiContentRequest = {
    /**
    * The bucketId, groupId, projectId, or documentId to be searched. The document or documents within the specified container will be compared to the query, and relevant information will be extracted.
    * @type {SearchContentIdParameter}
    * @memberof SearchApiContent
    */
    readonly id: SearchContentIdParameter;
    /**
    * The maximum number of returned search results. Accepts 1-100 with a default of 20.
    * @type {number}
    * @memberof SearchApiContent
    */
    readonly n?: number;
    /**
    * A token for pagination. If the number of search results for a given query is larger than n, the response will include a \"nextToken\" value. That token can be included in this field to retrieve the next batch of n search results.
    * @type {string}
    * @memberof SearchApiContent
    */
    readonly nextToken?: string;
    /**
    * The amount of data returned with each search result. 0 == no search results, only the recommended context. 1 == search results but no searchData. 2 == search results and searchData.
    * @type {number}
    * @memberof SearchApiContent
    */
    readonly verbosity?: number;
} & SearchRequest;
/**
 * Request parameters for documents operation in SearchApi.
 * @export
 * @interface SearchApiDocumentsRequest
 */
export type SearchApiDocumentsRequest = {
    /**
    * The maximum number of returned search results. Accepts 1-100 with a default of 20.
    * @type {number}
    * @memberof SearchApiDocuments
    */
    readonly n?: number;
    /**
    * A token for pagination. If the number of search results for a given query is larger than n, the response will include a \"nextToken\" value. That token can be included in this field to retrieve the next batch of n search results.
    * @type {string}
    * @memberof SearchApiDocuments
    */
    readonly nextToken?: string;
    /**
    * The amount of data returned with each search result. 0 == no search results, only the recommended context. 1 == search results but no searchData. 2 == search results and searchData.
    * @type {number}
    * @memberof SearchApiDocuments
    */
    readonly verbosity?: number;
} & SearchDocumentsRequest;
/**
 * SearchApiGenerated - object-oriented interface
 * @export
 * @class SearchApiGenerated
 * @extends {BaseAPI}
 */
export declare class SearchApiGenerated extends BaseAPI {
    /**
     * Search documents on GroundX for the most relevant information to a given query.  The result of this query is typically used in one of two ways; result[\'search\'][\'text\'] can be used to provide context to a language model, facilitating RAG, or result[\'search\'][\'results\'] can be used to observe chunks of text which are relevant to the query, facilitating citation.  Interact with the \"Request Body\" below to explore the arguments of this function. Enter your GroundX API key to send a request directly from this web page. Select your language of choice to structure a code snippet based on your specified arguments.
     * @summary search.content
     * @param {SearchApiContentRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SearchApiGenerated
     */
    content(requestParameters: SearchApiContentRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SearchResponse, any>>;
    /**
     * Search documents on GroundX for the most relevant information to a given query by documentId(s).  The result of this query is typically used in one of two ways; result[\'search\'][\'text\'] can be used to provide context to a language model, facilitating RAG, or result[\'search\'][\'results\'] can be used to observe chunks of text which are relevant to the query, facilitating citation.  Interact with the \"Request Body\" below to explore the arguments of this function. Enter your GroundX API key to send a request directly from this web page. Select your language of choice to structure a code snippet based on your specified arguments.
     * @summary search.documents
     * @param {SearchApiDocumentsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SearchApiGenerated
     */
    documents(requestParameters: SearchApiDocumentsRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SearchResponse, any>>;
}
